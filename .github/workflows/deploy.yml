# Workflow name
name: EE build (reusable)

# Controls when the workflow will run
on:
  # This is a reusable workflow
  workflow_call:
    inputs:
      EE_FOLDER_NAME:
        description: 'name of the folder where the EE is located (will become the name of the EE)'
        default: ''
        required: true
        type: string
      EE_IMAGE_TAG:
        description: 'just one tag for image build'
        default: 'latest'
        required: true
        type: string
      AWS_ACCESS_KEY_ID:
        description: 'needed for registry login'
        required: false
        type: string
    secrets:
      AWS_SECRET_ACCESS_KEY:
        description: 'needed for registry login'
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    environment: deploy
    steps:

      # In this job, all steps begin with a name
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install python requirements (ansible-builder)
        run: pip install -r requirements.txt

#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: eu-west-1

#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1

      - name: Build image
        id: build-image
        working-directory: ${{ inputs.EE_FOLDER_NAME }}
        run: |
          ansible-builder build \
          --context=../${{ inputs.EE_FOLDER_NAME }} \
          --tag=${{ inputs.EE_FOLDER_NAME }}:${{ inputs.EE_IMAGE_TAG }} \
          --tag=${{ inputs.EE_FOLDER_NAME }}:${{ github.sha }} \
          --container-runtime docker

      - name: List the image for debugging
        run: |
          docker images

      - name: Push to ECR
        id: ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ inputs.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: eu-west-1
          local-image: ${{ inputs.EE_FOLDER_NAME }}
          image: ${{ inputs.EE_FOLDER_NAME }}:${{ github.sha }}

#      - name: Push To ECR
#        id: ecr
#        uses: redhat-actions/push-to-registry@v2
#        with:
#          image: ${{ inputs.EE_FOLDER_NAME }}
#          tags: |
#            ${{ inputs.EE_IMAGE_TAG }}
#            ${{ github.sha }}
#          registry: ${{ steps.login-ecr.outputs.registry }}

      #- name: Print summary
      #  working-directory: ${{ inputs.EE_FOLDER_NAME }}
      #  run: |
      #    echo "## :rocket: Usage" >> $GITHUB_STEP_SUMMARY
      #    echo "" >> $GITHUB_STEP_SUMMARY
      #    echo "Image pushed to repository: [${{ steps.ecr.outputs.imageUrl }}]" >> $GITHUB_STEP_SUMMARY
      #    echo "> \`podman pull ${{ steps.ecr.imageUrl }}\`" >> $GITHUB_STEP_SUMMARY
      #    #echo "> \`podman pull quay.io/${{ inputs.QUAY_USER }}/${{ inputs.EE_FOLDER_NAME }}:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
      #    echo "## :pushpin: Ansible info:" >> $GITHUB_STEP_SUMMARY
      #    echo "" >> $GITHUB_STEP_SUMMARY
      #    echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      #    echo "`podman run ${{ inputs.EE_FOLDER_NAME }} ansible --version`" >> $GITHUB_STEP_SUMMARY
      #    echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      #    echo "## :pushpin: Installed collections:" >> $GITHUB_STEP_SUMMARY
      #    echo "" >> $GITHUB_STEP_SUMMARY
      #    echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      #    echo "`podman run ${{ inputs.EE_FOLDER_NAME }} ansible-galaxy collection list`" >> $GITHUB_STEP_SUMMARY
      #    echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      #    echo "## :pushpin: Containerfile:" >> $GITHUB_STEP_SUMMARY
      #    echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      #    echo "`cat Containerfile`" >> $GITHUB_STEP_SUMMARY
      #    echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
